// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Examination_System.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Examination_System.Data
{
    public partial interface IITI_EXAMContextProcedures
    {
        Task<List<Add_BranchResult>> Add_BranchAsync(string Branch_Name, string MgrId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Add_CourseResult>> Add_CourseAsync(string courseName, int? courseDuration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Add_Grade_To_StudentAsync(string std_id, int? Exam_id, double? Grade, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Add_InstructorResult>> Add_InstructorAsync(string Ins_id, string Ins_name, string ins_password, string Ins_mobile, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Add_QuestionResult>> Add_QuestionAsync(string Qtitle, string QAnswer, string Qtype, int? Qweight, string Qchoice1, string Qchoice2, string Qchoice3, string Qchoice4, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Add_StudentResult>> Add_StudentAsync(string std_name, string std_password, string std_mobile, DateOnly? std_birthDate, int? track_id, int? branch_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Add_TrackResult>> Add_TrackAsync(string TrackName, string SuperId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Assgin_Question_For_Course_By_InstructorResult>> Assgin_Question_For_Course_By_InstructorAsync(int? QId, int? CourseId, string InstructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Assign_Course_To_Instructor_Track_BranchResult>> Assign_Course_To_Instructor_Track_BranchAsync(string instructorId, int? course_Id, int? trackId, int? branchId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Assign_Course_To_TrackResult>> Assign_Course_To_TrackAsync(int? courseId, int? trackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_BranchResult>> Delete_BranchAsync(int? Branch_Id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_Course_By_IdResult>> Delete_Course_By_IdAsync(int? id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_Course_From_InstructorResult>> Delete_Course_From_InstructorAsync(string instructorId, int? course_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_Course_From_TrackResult>> Delete_Course_From_TrackAsync(int? courseId, int? trackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_InstructorResult>> Delete_InstructorAsync(string Ins_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_QuestionResult>> Delete_QuestionAsync(int? QId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_Question_From_Course_By_InstructorResult>> Delete_Question_From_Course_By_InstructorAsync(int? QId, int? CourseId, string InstructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_StudentResult>> Delete_StudentAsync(string std_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_TopicResult>> Delete_TopicAsync(int? topicId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Delete_TrackResult>> Delete_TrackAsync(int? TrackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_AnswersResult>> Exam_AnswersAsync(int? Ex_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_CorrectionResult>> Exam_CorrectionAsync(int? Ex_id, string std_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Exam_GenerationResult>> Exam_GenerationAsync(string ins_id, int? crs_id, int? tf, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Log_ErrorAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_BranchesResult>> Read_All_BranchesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_CoursesResult>> Read_All_CoursesAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_Instructor_CoursesResult>> Read_All_Instructor_CoursesAsync(string instructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_InstructorsResult>> Read_All_InstructorsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_Questions_For_CourseResult>> Read_All_Questions_For_CourseAsync(int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_Questions_For_Course_By_InstructorResult>> Read_All_Questions_For_Course_By_InstructorAsync(string InstructorId, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_StudentsResult>> Read_All_StudentsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_TopicsResult>> Read_All_TopicsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_Track_CoursesResult>> Read_All_Track_CoursesAsync(int? trackId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_All_TracksResult>> Read_All_TracksAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_Exam_QuestionsResult>> Read_Exam_QuestionsAsync(int? ExamId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_Instructor_Courses_By_Instructor_IdResult>> Read_Instructor_Courses_By_Instructor_IdAsync(string instructorId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_Questions_With_Students_AnswersResult>> Read_Questions_With_Students_AnswersAsync(int? examId, int? studentId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_Student_Grades_By_Student_IdResult>> Read_Student_Grades_By_Student_IdAsync(int? studentId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_Students_Data_By_Track_IdResult>> Read_Students_Data_By_Track_IdAsync(int? track_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Read_Topics_Of_CourseResult>> Read_Topics_Of_CourseAsync(int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Show_ErrorResult>> Show_ErrorAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Throw_Error_No_Rows_AffectedAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_BranchResult>> Update_BranchAsync(int? Branch_Id, string Branch_Name, string MgrId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_Course_By_IdResult>> Update_Course_By_IdAsync(int? id, string courseName, int? courseDuration, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_InstructorResult>> Update_InstructorAsync(string Ins_id, string Ins_name, string ins_password, string Ins_mobile, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_StudentResult>> Update_StudentAsync(string std_id, string std_name, string std_password, string std_mobile, DateOnly? std_birthDate, int? track_id, int? branch_id, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_TopicResult>> Update_TopicAsync(int? topicId, string topicName, int? courseId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Update_TrackResult>> Update_TrackAsync(int? TrackId, string TrackName, string SuperId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
