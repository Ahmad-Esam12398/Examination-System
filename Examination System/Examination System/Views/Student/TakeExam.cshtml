@model List<Read_Exam_QuestionsResult>
@{
    ViewData["Title"] = "Info";
    Layout = null;
    var minutes = ViewBag.duration;
    var StdName = ViewBag.StudentName;
    var CrsName = ViewBag.CrsName;
    var currentQuestionIndex = 0;
    var totalQuestions = Model.Count;
    var currentQuestion = Model[currentQuestionIndex];
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@CrsName Exam</title>
    <link href="/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .header {
            background-color: #283747;
            color: white;
            padding: 10px 40px;
            height: 80px;
        }
        .bottom {
            background-color: #283747;
            color: white;
            padding: 10px;
            text-align: center;
            position: fixed;
            bottom: 0;
            width: 100%;
            height: 80px;
        }
        .content {
            flex-grow:1;
            margin-top: 50px;
            margin-bottom: 50px;
            position: relative;
        }
        .question-container {
            display: none;
            padding: 50px 0;
        }
        .question-container:first-child {
            display: block;
        }
        .navigation {
            position: absolute;
            bottom: 100px;
            display: flex;
            justify-content: space-between;
            width: 100%;
        }
        .navigation button {
            padding: 5px 10px;
            font-size: 17px;
            font-weight: bold;
            background-color: rgb(67, 98, 211);
            color: white;
            border-radius: 5px;
        }
        .navigation button:hover {
            cursor: pointer;
            border: 2px solid rgb(67, 98, 211);
        }
        .navigation button:disabled {
            cursor: not-allowed;
            background-color: #ddd;
            color: #666;
        }
    </style>
</head>
<body class="d-flex flex-column vh-100">
    <div class="header d-flex justify-content-lg-between align-items-center">
        <span id="welcomeMessage">Welcome: @StdName</span>
        <span id="examName">Exam Name: @CrsName</span>
        <span id="examDuration">Exam Duration: @minutes Min</span>
    </div>

    <div class="content container">
        <form method="post" id="examForm" asp-controller="Student" asp-action="AnswerHandling">
            <div class="question-container d-flex flex-column">
                <p><strong>@(currentQuestionIndex + 1)_@currentQuestion.ques_tittle</strong> </p>
                @{
                    var answerChoices = new List<string>();
                    foreach (var choice in currentQuestion.Choices.Split("###"))
                    {
                        answerChoices.Add(choice);
                    }
                }

                <input type="hidden" name="questionId" value="@currentQuestion.ques_id" />
                <input type="hidden" name="CurrentQuestionIndex" value="@currentQuestionIndex" />
                <input type="hidden" name="STD_ID" value="@ViewBag.StdId" />
                <input type="hidden" name="CRS_ID" value="@ViewBag.CrsId" />
                <input type="hidden" name="ExamId" value="@ViewBag.examId" />
                <div class="options-container d-flex flex-column justify-content-between mb-3">
                    @if (currentQuestion.ques_type == "M")
                    {
                        <label class="p-3 bg-opacity-10">
                            <input type="radio" name="Answer.@currentQuestion.ques_id" value="A" /> @answerChoices[0]
                        </label>
                        <label class="p-3 bg-opacity-10">
                            <input type="radio" name="Answer.@currentQuestion.ques_id" value="B" /> @answerChoices[1]
                        </label>
                        <label class="p-3 bg-opacity-10">
                            <input type="radio" name="Answer.@currentQuestion.ques_id" value="C" /> @answerChoices[2]
                        </label>
                        <label class="p-3 bg-opacity-10">
                            <input type="radio" name="Answer.@currentQuestion.ques_id" value="D" /> @answerChoices[3]
                        </label>
                    }
                    else if (@currentQuestion.ques_type == "T")
                    {
                        <label class="p-3 bg-opacity-10">
                            <input type="radio" name="Answer.@currentQuestion.ques_id" value="A" /> True
                        </label>
                        <label class="p-3 bg-opacity-10">
                            <input type="radio" name="Answer.@currentQuestion.ques_id" value="B" /> False
                        </label>
                    }
                </div>
                
            </div>
            <div class="navigation d-flex justify-content-lg-between p-4">
                <button type="button" id="prevBtn" name="action" value="Previous" class="btn btn-primary" disabled="@(currentQuestionIndex == 0)">Previous</button>
                <button type="button" id="nextBtn" name="action" value="Next" class="btn btn-primary" disabled="@(currentQuestionIndex == totalQuestions - 1)">Next</button>
            </div>
        </form>
    </div>

    <div class="bottom d-flex justify-content-lg-between align-items-center">
        <p>Made with love: ITI Mansoura © 2023</p>
        <button id="submit-button" type="submit" name="action" value="Submit" class="btn btn-danger DarkredBtn text-light">Submit Answers</button>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        var currentQuestionIndex = 0;
        var totalQuestions = @totalQuestions;
        var minutes = @minutes;
        var seconds = 0;
        var examDuration = document.getElementById("examDuration");
        var questions = @Html.Raw(Json.Serialize(Model));

        function showQuestion(index) {
            console.log(index);
            $(".question-container").empty(); 
            var currentQuestion = questions[index];
            console.log(currentQuestion);
            console.log(currentQuestionIndex);
            var answerChoices = currentQuestion.choices.split("###");
            var questionContent = "<p><strong>" + (index + 1) + "_" + currentQuestion.ques_tittle + "</strong></p>";

            if (currentQuestion.ques_type == "M") {
                answerChoices.forEach(function (choice, i) {
                    questionContent += '<label class="p-3 bg-opacity-10">';
                    questionContent += '<input type="radio" name="Answer.' + currentQuestion.ques_id + '" value="' + String.fromCharCode(65 + i) + '" />';
                    questionContent += choice;
                    questionContent += '</label>';
                });
            } else if (currentQuestion.ques_type == "T") {
                questionContent += '<label class="p-3 bg-opacity-10">';
                questionContent += '<input type="radio" name="Answer.' + currentQuestion.ques_id + '" value="A" />';
                questionContent += 'True';
                questionContent += '</label>';
                questionContent += '<label class="p-3 bg-opacity-10">';
                questionContent += '<input type="radio" name="Answer.' + currentQuestion.ques_id + '" value="B" />';
                questionContent += 'False';
                questionContent += '</label>';
            }
            $(".question-container").html(questionContent);
            currentQuestionIndex = index;
            document.getElementById("prevBtn").disabled = index === 0;
            document.getElementById("nextBtn").disabled = index === totalQuestions - 1;
        }

        $("#nextBtn").click(function () {
            if (currentQuestionIndex < totalQuestions - 1) {
                showQuestion(currentQuestionIndex + 1);
            }
        });

        $("#prevBtn").click(function () {
            if (currentQuestionIndex > 0) {
                showQuestion(currentQuestionIndex - 1);
            }
        });

        var myTime = setInterval(function () {
            if (minutes == 0 && seconds == 0) {
                clearInterval(myTime);
                document.getElementById("end").click();
            }
            else if (seconds == 0) {
                minutes--;
                seconds = 59;
            }
            else {
                seconds--;
            }
            examDuration.innerText = "Exam Duration:  " + minutes + ":" + seconds.toString().padStart(2, '0');
        }, 1000);

        document.getElementById("examForm").addEventListener("submit", function () {
            window.location.href = "/Home/Index";
        });
    </script>
</body>
</html>
